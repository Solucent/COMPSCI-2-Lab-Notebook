#include "pch.h"
#include <iostream>
#include <iomanip>
#include <vector>
#include <numeric>

using namespace std;

class CashRegister
{
public:
	CashRegister();
	void clear();
	void addItem(double price);
	double getTotal() const;
	int getCount() const;
	void displayAll();
	void addTaxableItem(double price);
	double getTotalTax();
private:
	vector<double> item;
	vector<double> itemTax;
	double tax = 0.15;
};

CashRegister::CashRegister() {
	clear();
}
void CashRegister::clear() {
	item.clear();
}
void CashRegister::addItem(double price) {
	item.push_back(price);
}
double CashRegister::getTotal() const {
	return accumulate(item.begin(), item.end(), 0.0);
}
int CashRegister::getCount() const {
	return item.size();
}
void CashRegister::displayAll() {
	for (int i = 0; i < item.size(); i++) {
		cout << "Item " << i + 1 << ": " << item.at(i) << endl;
	}
}
void CashRegister::addTaxableItem(double price) {
	itemTax.push_back((price * tax) + price);
}
double CashRegister::getTotalTax() {
	return accumulate(itemTax.begin(), itemTax.end(), 0.0);
}

void display(CashRegister reg) {
	cout << reg.getCount() << " $" << fixed << setprecision(2)
		<< reg.getTotal()  << endl;
}

int main()
{
	CashRegister register1;
	register1.clear();
	register1.addItem(1.95);
	display(register1);
	register1.addItem(0.95);
	display(register1);
	register1.addItem(2.50);
	display(register1);
	register1.displayAll();
	register1.addTaxableItem(5.00);
	display(register1);
	return 0;
}
